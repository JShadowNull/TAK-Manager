TAK Server Status Page Flow:

1. Initial Load
- Check if TAK server is installed and running via SSE from /api/takserver/server-status-stream
  SSE Event: "server-status"
  Data Structure: {
    "isInstalled": boolean,
    "isRunning": boolean,
    "version": string,
    "error"?: string
  }
- Continuous monitoring of server state using SSE every 5 seconds

2. Page Content
- Display determined by TAK server installation status from /api/takserver/takserver-status
  Response: {
    "isInstalled": boolean,
    "isRunning": boolean,
    "version": string
  }

3. Container Operations
a. Start Operation
- "Start" button enters loading state when clicked
- Button submits to /api/takserver/takserver-start (POST)
- Progress monitored via /api/takserver/operation-status-stream SSE
  SSE Event: "operation-status"
  Data Structure: {
    "operation": "start", 
    "status": "idle" | "in_progress" | "complete" | "error",
    "message": string,
    "error"?: string
  }
- Button loading state resets when status is "complete" or "error"

b. Stop Operation  
- "Stop" button enters loading state when clicked
- Button submits to /api/takserver/takserver-stop (POST)
- Progress monitored via /api/takserver/operation-status-stream SSE
  SSE Event: "operation-status"
  Data Structure: {
    "operation": "stop",
    "status": "idle" | "in_progress" | "complete" | "error", 
    "message": string,
    "error"?: string
  }
- Button loading state resets when status is "complete" or "error"

c. Restart Operation
- "Restart" button enters loading state when clicked
- Button submits to /api/takserver/takserver-restart (POST)
- Progress monitored via /api/takserver/operation-status-stream SSE
  SSE Event: "operation-status"
  Data Structure: {
    "operation": "restart",
    "status": "idle" | "in_progress" | "complete" | "error",
    "message": string,
    "error"?: string
  }
- Button loading state resets when status is "complete" or "error"

4. Installation Flow
a. Not Installed State
- Display "Install" button
- Button opens installation form popup

b. Installation Form
- User completes required fields:
  - docker_zip_file (file upload)
  - postgres_password
  - certificate_password 
  - organization
  - state
  - city
  - organizational_unit
  - name
- Field validation using @index.ts rules
- "Begin Installation" button submits to /api/takserver/install-takserver (POST multipart/form-data)

c. Installation Progress
- Progress popup shows:
  - Indeterminate progress bar initially
  - Percentage output from sse event once received
  - Real-time terminal output via /api/takserver/install-status-stream SSE
    SSE Event: "install-status"
    Data Structure: {
      "status": "idle" | "in_progress" | "complete" | "error",
      "progress": number,
      "message": string,
      "error"?: string,
      "terminalOutput": Array<{
        "message": string,
        "isError": boolean,
        "timestamp": number
      }>
    }
- "Next" button appears on completion

d. Completion State  
- Shows success/error message from /api/takserver/install-status-stream
- "Close" button to dismiss popup
- Fetches updated TAK server state from /api/takserver/takserver-status on close

5. Uninstallation Flow
a. Installed State
- Display "Uninstall" button
- Button opens confirmation popup

b. Uninstall Confirmation
- Shows warning about uninstallation being irreversible
- "Cancel" and "Uninstall" buttons
- "Uninstall" button submits to /api/takserver/uninstall-takserver (POST)

c. Uninstallation Progress
- Progress popup shows:
  - Indeterminate progress bar initially
  - Percentage output from sse event once received
  - Real-time terminal output via /api/takserver/uninstall-status-stream SSE
    SSE Event: "uninstall-status"
    Data Structure: {
      "status": "idle" | "in_progress" | "complete" | "error",
      "progress": number,
      "message": string,
      "error"?: string,
      "terminalOutput": Array<{
        "message": string,
        "isError": boolean,
        "timestamp": number
      }>
    }
- "Next" button appears on completion

d. Completion State
- Shows success/error message from /api/takserver/uninstall-status-stream
- "Close" button to dismiss popup
- Fetches updated TAK server state from /api/takserver/takserver-status on close
