# syntax=docker/dockerfile:1

FROM python:3.13.2-slim

WORKDIR /app

# Docker repository setup (still needed for CLI)
RUN apt-get update && \
    apt-get install -y --no-install-recommends curl && \
    install -m 0755 -d /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc && \
    chmod a+r /etc/apt/keyrings/docker.asc && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] \
    https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable" \
    > /etc/apt/sources.list.d/docker.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    docker-ce-cli \
    docker-compose-plugin \
    unzip \
    zip \
    libxml2-utils \
    sed && \
    rm -rf /var/lib/apt/lists/*

# Node.js installation (with version pinning)
RUN curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    apt-get install -y nodejs=22.13.1-1nodesource1 && \
    rm -rf /var/lib/apt/lists/*

# Python dependencies with cache mount
COPY server/requirements.txt .
RUN --mount=type=cache,target=/root/.cache \
    pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Install Node dependencies
COPY client/package*.json ./client/
RUN cd client && npm install

# Application setup
RUN mkdir -p /app/logs && chmod -R 755 /app/logs
COPY . .
COPY start.sh /start.sh
RUN chmod +x /start.sh

# Start of Selection
CMD ["/start.sh"] 