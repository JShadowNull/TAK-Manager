# git-cliff ~ default configuration file
# https://git-cliff.org/docs/configuration
#
# Lines starting with "#" are comments.
# Configuration options are organized into tables and keys.
# See documentation for more information on available options.

[changelog]
# template for the changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{% if version -%}
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else -%}
    ## [Unreleased]
{% endif -%}
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits | unique(attribute="message") %}
        - {{ commit.message | split(pat="\n") | first | upper_first | trim }}\
    {% endfor %}
{% endfor %}\n
"""
# template for the changelog footer
footer = """
{% for release in releases | reverse -%}
    {% if release.version -%}
        {% if release.previous.version -%}
            [{{ release.version | trim_start_matches(pat="v") }}]: \
                https://gitea.ubuntuserver.buzz/Jake/Tak-Manager.git\
                    /compare/{{ release.previous.version }}..{{ release.version }}
        {% endif -%}
    {% else -%}
        [unreleased]: https://gitea.ubuntuserver.buzz/Jake/Tak-Manager.git\
            /compare/{{ releases | first | get(key="version") }}..HEAD
    {% endif -%}
{% endfor %}
<!-- generated by git-cliff -->
"""
# remove the leading and trailing s
trim = true
# postprocessors
postprocessors = [
  # { pattern = '<REPO>', replace = "https://github.com/orhun/git-cliff" }, # replace repository URL
]
# render body even when there are no releases to process
# render_always = true
# output file path
# output = "test.md"

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
  # Replace issue numbers
  #{ pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))"},
  # Check spelling of the commit with https://github.com/crate-ci/typos
  # If the spelling is incorrect, it will be automatically fixed.
  #{ pattern = '.*', replace_command = 'typos --write-changes -' },
]
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^feat:", group = "Added" },
    { message = "^[aA]dd", group = "Added" },
    { message = "^.*: add", group = "Added" },
    { message = "^[sS]upport", group = "Added" },
    { message = "^.*: support", group = "Added" },
    { message = "^fix:", group = "Fixed" },
    { message = "^.*: fix", group = "Fixed" },
    { message = "^[rR]emove", group = "Removed" },
    { message = "^.*: remove", group = "Removed" },
    { message = "^.*: delete", group = "Removed" },
    { message = "^[bB]ump.*version", group = "Changed" },
    { message = "^.*: bump.*version", group = "Changed" },
    { message = "^[uU]pdate.*submodule", skip = true },
    { message = "^[mM]ark.*submodule", skip = true },
    { message = "^[eE]nhance", group = "Changed" },
    { message = "^[rR]efactor", group = "Changed" },
    { message = "^[uU]pdate", group = "Changed" },
    { message = "^[cC]hore:", skip = true },
    { message = "^.*", group = "Changed" }
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = true
# sort the commits inside sections by oldest/newest order
sort_commits = "newest"
git_dirs = [".", "tak-manager-wrapper"]
skip_commits = true
tag_pattern = "^v\\d+\\.\\d+\\.\\d+$"
ignore_tags = ""
protect_breaking_commits = false
link_parsers = []
