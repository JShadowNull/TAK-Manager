services:
  prod:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENV: production
    image: tak-manager:3.1.2
    container_name: tak-manager-production
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - BACKEND_PORT=${BACKEND_PORT:-8003}
      - TAK_SERVER_INSTALL_DIR=${TAK_SERVER_INSTALL_DIR}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${TAK_SERVER_INSTALL_DIR}/tak-manager/data:/home/tak-manager:rw
      - ${TAK_SERVER_INSTALL_DIR}/tak-manager/logs:/app/logs:rw
    ports:
      - ${BACKEND_PORT:-8003}:${BACKEND_PORT:-8003}
    networks:
      - tak-manager-network
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:${BACKEND_PORT}/health
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-3}
  dev:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENV: development
    image: tak-manager-development:latest
    container_name: tak-manager-development
    restart: ${RESTART_POLICY:-always}
    privileged: true
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logs:/app/logs:rw
      - ./server:/app/server:rw
      - ./client:/app/client:rw
      - node_modules:/app/client/node_modules
      - ${TAK_SERVER_INSTALL_DIR}/tak-manager/data:/home/tak-manager:rw
    ports:
      - ${BACKEND_PORT:-8003}:${BACKEND_PORT:-8003}
      - ${FRONTEND_PORT:-5174}:${FRONTEND_PORT:-5174}
    networks:
      - tak-manager-network
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:${BACKEND_PORT}/health
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-3}
volumes:
  node_modules: null
networks:
  tak-manager-network:
    driver: bridge
